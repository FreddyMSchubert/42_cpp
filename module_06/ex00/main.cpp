/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: freddy <freddy@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/09/05 10:56:13 by fschuber          #+#    #+#             */
/*   Updated: 2024/09/09 18:18:31 by freddy           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ScalarConverter.hpp"

void	runTest(std::string test)
{
	std::cout << "Testing: \"" << test << "\"" << std::endl;
	ScalarConverter::convert(test);
	std::cout << std::endl;
}

int	main()
{
	runTest("42");
	runTest("-42");
	runTest("-");
	runTest(".");
	runTest(",");
	runTest("");
	runTest("0");
	runTest("-0");
	runTest("0000000");
	runTest("420");
	runTest("483a649");
	runTest("ÃŸ");
	runTest("apple");
	runTest("42.0f"); //
	runTest("42.f"); //
	runTest(".3f"); //
	runTest(".f");
	runTest("123.123f"); //
	runTest("123.123f.");
	runTest("123123f.");
	runTest("123123.f"); //
	runTest("123.123f.23");
	runTest("123.123.23");
	runTest("123.123.0");
	runTest("123..23");
	runTest("123.123.1f");
	runTest("123.1f1");
	runTest("f");
	runTest("35.3F");
	runTest("\n"); //
	runTest("\t"); //
	runTest("\v"); //
	runTest("\r"); //
	runTest("29.3");
	runTest("29. 3");
	runTest(" ");
	runTest("                         ");
	runTest("nan");
	runTest("nanf");
	runTest("inf");
	runTest("inff");
	runTest("+inff");
	runTest("+inf");
	runTest("-inf");
	runTest("-inff");
	runTest("127");
	runTest("128");
	runTest("-128");
	runTest("-129");
	runTest("2147483647");
	runTest("2147483648");
	runTest("-2147483648");
	runTest("-2147483649");
	runTest("340282346638528859811704183484516925440.0f");
	runTest("340282346638528859811704183484516925441.0f");
	runTest("-340282346638528859811704183484516925440.0f");
	runTest("-340282346638528859811704183484516925441.0f");
	runTest("179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0");
	runTest("179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858369.0");
	runTest("-179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0");
	runTest("-179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858369.0");
}
